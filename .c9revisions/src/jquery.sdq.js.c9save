{"ts":1361816979718,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function( $ ){\n\n\tvar validarCedula;\n\n\tvar methods = {\n\t\tcedula : function( options ) { \n\t\t  \n\t\t  \tthis.on('keypress', soloNumeros);\n\t\t\tthis.on('keypress', formatCedula);\n\t\t\tthis.on('paste', antiPaste);\n\t\t\treturn this;\n\n\t\t},\n\t\trnc : function( options ) {\n\t\t  // TODO: Implementar logica para formatear el campo y que solo reciba un RNC\n\t\t},\n\t\tnss : function( options ) {\n\t\t  // TODO: Implementar logica para formatear el campo y que solo reciba un NSS\n\t\t}\n\t};\n\n\t// Las cedulas estan en el archivo j.query.sdq-cedulas.js que luego se junta al compilarlo\n\t// Se agrego esta validacion para poder trabajar con el fuente y no tener que usar el /lib/\n\t// para las pruebas y desarrollo\n\tif (!cedulasLocas) {\n\t\tvar cedulasLocas = ['00000000018','11111111123'];\n\t};\n\n\t//------------------------//\n\t// Definición del plugin //\n\n\tif (!$.SDQ) {\n\t\t$.SDQ = {};\t\n\t};\n\n\t$.fn.SDQ = function( method ) {\n\n\t\tif ( methods[method] ) {\n\t\t  return methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));\n\t\t} else if ( typeof method === 'object' || ! method ) {\n\t\t  return methods.init.apply( this, arguments );\n\t\t} else {\n\t\t  $.error( 'Method ' +  method + ' does not exist on jQuery.SDQ' );\n\t\t}\n\n\t};\n\n\n\t//------------------------------//\n\t// Métodos privados del plugin //\n\n\tformatCedula = function(e){\n\t\tvar entrada, valorCampo, longitudCampo, longitudPermitida;\n\n\t\tlongitudPermitida = 11;\n\n\t\tentrada = String.fromCharCode(e.which);\n\t\tif (!/^\\d+$/.test(entrada)) {\n  \t\t\treturn false;\n\t\t}\n\n\t\tvalorCampo = $(e.currentTarget).val();\n\n\t\tlongitudCampo = (valorCampo.replace(/\\D/g, '') + entrada).length;\n\n\t\tif (longitudCampo > longitudPermitida) {\n\t\t\treturn false;\n\t\t};\n\n\t\treturn true;\n\n\n\t\t// TODO: Falta mucho aqui aun!!!!....\n\n\t};\n\n\tantiPaste = function(e){\n\n\t\tvalorAnterior = $(e.currentTarget).val();\n\t    \n\t\treturn setTimeout(function(){\n\t\t\tvalor = $(e.currentTarget).val();\n\n\t\t\tif (!/^\\d+$/.test(valor)) {\n\t  \t\t\t$(e.currentTarget).val(valorAnterior);\n\t\t\t}\n\n\t\t});\n\t    \n\t};\n\n\tsoloNumeros = function(e) {\n\t    var input;\n\t    if (e.metaKey || e.ctrlKey) {\n\t      return true;\n\t    }\n\t    if (e.which === 32) {\n\t      return false;\n\t    }\n\t    if (e.which === 0) {\n\t      return true;\n\t    }\n\t    if (e.which < 33) {\n\t      return true;\n\t    }\n\t    input = String.fromCharCode(e.which);\n\t    return !!/[\\d\\s]/.test(input);\n  \t};\n\n\t//------------------------------//\n\t// Métodos publicos del plugin //\n\n\t/**\n\t * Valida un dato como cédula de identidad y electoral.\n\t *\n\t * @param {string} <datos> El dato a validar.\n\t *\n\t * @return {boolean} `true` si el datos es una cédula de identidad y electoral válida, de lo contrario `false`.\n\t */\n\t$.SDQ.validarCedula = function( datos ) {\n\n\t\t// Validar longitud\n\t\tif (datos.length != 11) {\n\t\t\treturn false\n\t\t};\n\n\t\t// Validar que solo sean numeros\n\t\tif (!/^\\d+$/.test(datos)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Validar el listado\n\t\tif (jQuery.inArray(datos, cedulasLocas) > -1){\n\t\t\treturn true;\n\t\t}\n\n\t\t// Validar el algoritmo (LUHN)\n\t\tvar digitoVerificador = parseInt(datos.substring(datos.length-1, datos.length));\n\t\tvar digitos = datos.substring(0, datos.length-1);\n\n\t\tvar suma = 0;\n\t\tfor (i=0; i < digitos.length; i++){\n\t\t\tsuma += parseInt(digitos.substring(i, i+1));\n\t\t}\n\n\t\tvar jce = new Array (0,1,2,3,4,-4,-3,-2,-1,0);\n\t\tfor (i=digitos.length-1; i>=0; i-=2){\n\t\t\tvar jceIndex = parseInt(digitos.substring(i, i+1));\n\t\t\tvar jceValue = jce[jceIndex];\n\t\t\tsuma += jceValue;\n\t\t}\n\n\t\tvar modulo10 = suma % 10;\n\t\tmodulo10 = 10 - modulo10;\n\t\tif (modulo10 == 10) {\t\n\t\t\tmodulo10=0\n\t\t};\n\n\t\tif (isNaN(modulo10)) {\n\t\t\t//console.log(\"isNaN-modulo10\");\n\t\t\treturn false;\n\t\t};\n\n\t\tif (digitoVerificador != modulo10) {\n\t\t\t//console.log(\"digitoVerificador != modulo10\");\n\t\t\t//console.log(datos);\n\t\t\t//console.log(digitos);\n\t\t\t//console.log(modulo10);\n\t\t\treturn false;\n\t\t};\n\n\t\treturn true;\n\n\t};\n\n\t$.SDQ.validarRNC = function( datos ) {\n\n\t\t// Validar longitud\n\t\tif ( (datos.length != 9) && (datos.length != 11)  ){\n\t\t\treturn false\n\t\t};\n\n\t\t// Validar el listado\n\n\t\t// Validar el algoritmo\n\n\t\treturn true;\n\n\t};\n\n\t$.SDQ.validarNSS = function( datos ) {\n\n\t\t// Validar longitud\n\t\tif (datos.length != 9){\n\t\t\treturn false\n\t\t};\n\n\t\t// Validar el listado\n\n\t\t// Validar el algoritmo\n\n\t\treturn true;\n\n\t};\n\n\n})( jQuery );"]],"start1":0,"start2":0,"length1":0,"length2":4221}]],"length":4221}
