{"name":"jQuery.SDQ","tagline":"Un plugin de jQuery open source para el manejo de Cedula, RNC, NCFs y otros documentos utilizados en la Republica Dominicana","body":"# jQuery.SDQ\r\n\r\n![bandera](https://raw.github.com/hminaya/SDQ/master/example/img/bandera.jpeg) Es un plugin de jQuery Open Source para validar diversos tipos de documentos y darle formato a los campos de entradas.\r\n\r\nPor ejemplo, puedes darle el formato debido a un campo haciendo lo siguiente:\r\n\r\n``` javascript\r\nvar cedula = $(\"#CampoCedula\").SDQ('cedula');\r\n```\r\n\r\ny luego, cuando vas a someter tu formulario puedes proceder a hacer tus validaciones de la siguiente manera:\r\n\r\n``` javascript\r\nif (!cedula.validar()) {\r\n\talert ('El numero de cedula es invalido');\r\n\treturn false;\r\n}\r\n```\r\n\r\nLos tipos de documentos que se manejan son:\r\n* Cedula de identidad y electoral - JCE\r\n* Registro Nacional de Contribuyente (RNC) - DGII {acaba de ser agregado - beta}\r\n* Numero de comprobante fiscal (NCF) - DGII {acaba de ser agregado - beta}\r\n* Numero de Seguridad Social (NSS) - TSS {pendiente}\r\n\r\n##¿Como incluirlo en su proyecto?\r\n\r\nPuedes bajar la ultima versión de esta libreria, disponible en https://raw.github.com/hminaya/SDQ/master/lib/jquery.sdq.js e incluirlo junto con sus otros scripts. Recuerda que debes tener incluido jQuery para poder utilizar esta libreria.\r\n\r\n\r\n##API - Cedula\r\n\r\n### $.fn.SDQ('cedula');\r\nLe da formato a un campo para introducir una cedula:\r\n* Solo permite que se puedan introducir numeros\r\n* Maneja el paste para evitar chars invalidos\r\n* Solo permite longitud de 11\r\n\r\nEjemplo:\r\n\r\n``` javascript\r\n$('#campoCedula').SDQ('cedula');\r\n```\r\n\r\n### $.SDQ.validarCedula(numero);\r\nValida si la información recibida corresponde a un numero de cedula:\r\n* Compara contra el algoritmo de LUHN utilizando mod 10\r\n* Maneja un listado de cedulas que fueron emitidas por la JCE, pero que no cumplen con el algoritmo anterior\r\n* Solo puede contener numeros\r\n* Valida la longitud\r\n\r\nEjemplo:\r\n\r\n``` javascript\r\n$.SDQ.validarCedula('00113918315'); // => False\r\n```\r\n\r\n### Alternativa\r\notra forma de validar un input de cedula es de la siguiente manera:\r\n\r\n ``` javascript\r\nvar cedula = $('#campoCedula').SDQ('cedula');\r\ncedula.validar() // => Toma el valor del campo y se la pasa al metodo $.SDQ.validarCedula()\r\n```\r\n\r\n##API - RNC\r\n\r\n### $.fn.SDQ('rnc');\r\nLe da formato a un campo para introducir un RNC:\r\n* Solo permite que se puedan introducir numeros\r\n* Maneja el paste para evitar chars invalidos\r\n* Solo permite longitud de 9\r\n\r\nEjemplo:\r\n\r\n``` javascript\r\n$('#campoRNC').SDQ('rnc');\r\n```\r\n\r\n### $.SDQ.validarRNC(numero);\r\nValida si la información recibida corresponde a un RNC:\r\n* Compara contra el algoritmo\r\n* Maneja un listado de RNCs que fueron emitidos por la DGII, pero que no cumplen con el algoritmo anterior //TODO: Pendiente\r\n* Solo puede contener numeros\r\n* Valida la longitud\r\n\r\nEjemplo:\r\n\r\n``` javascript\r\n$.SDQ.validarRNC('A234567XX'); // => False\r\n```\r\n\r\n### Alternativa\r\notra forma de validar un input de rnc es de la siguiente manera:\r\n\r\n ``` javascript\r\nvar rnc = $('#campoRNC').SDQ('rnc');\r\nrnc.validar() // => Toma el valor del campo y se la pasa al metodo $.SDQ.validarRNC()\r\n```\r\n\r\n##API - NCF\r\n\r\n### $.fn.SDQ('ncf');\r\nLe da formato a un campo para introducir un NCF:\r\n* Permite la entrada de datos de acuerdo a la estructura de un NCF (pendiente)\r\n* Maneja el paste para evitar chars invalidos\r\n* Controla la longitud (pendiente)\r\n\r\nEjemplo:\r\n\r\n``` javascript\r\n$('#campoNCF').SDQ('ncf');\r\n```\r\n\r\n### $.SDQ.validarNCF(numero);\r\nValida si la información recibida corresponde a un NCF:\r\n* Compara contra el algoritmo (pendiente)\r\n* Solo puede contener numeros y letras de acuerdo a las especificaciones\r\n* Valida la longitud\r\n\r\nEjemplo:\r\n\r\n``` javascript\r\n$.SDQ.validarNCF('A999999999999999999'); // => False\r\n```\r\n\r\n### Alternativa\r\notra forma de validar un input de ncf es de la siguiente manera:\r\n\r\n ``` javascript\r\nvar ncf = $('#campoNCF').SDQ('ncf');\r\nncf.validar() // => Toma el valor del campo y se la pasa al metodo $.SDQ.validarNCF()\r\n```\r\n\r\n##API - NSS\r\n\r\n### $.fn.SDQ('nss');\r\nLe da formato a un campo para introducir un NSS:\r\n* Solo permite que se puedan introducir numeros\r\n* Maneja el paste para evitar chars invalidos\r\n* Solo permite longitud de XX //TODO: Pendiente\r\n\r\nEjemplo:\r\n\r\n``` javascript\r\n$('#campoNSS').SDQ('nss');\r\n```\r\n\r\n### $.SDQ.validarNSS(numero);\r\nValida si la información recibida corresponde a un NSS:\r\n* Compara contra el algoritmo XX // TODO: Pendiente\r\n* Maneja un listado de NSS que fueron emitidos por la TSS, pero que no cumplen con el algoritmo anterior //TODO: Pendiente\r\n* Solo puede contener numeros\r\n* Valida la longitud //TODO: Pendiente\r\n\r\nEjemplo:\r\n\r\n``` javascript\r\n$.SDQ.validarNSS('A234567XX'); // => False\r\n```\r\n\r\n### Alternativa\r\notra forma de validar un input de nss es de la siguiente manera:\r\n\r\n ``` javascript\r\nvar nss = $('#campoNSS').SDQ('nss');\r\nnss.validar() // => Toma el valor del campo y se la pasa al metodo $.SDQ.validarNSS()\r\n```\r\n\r\n##¿Como contribuir?\r\nSi quieres contribuir en este proyecto puedes comenzar con uno de los [issues pendientes](https://github.com/hminaya/SDQ/issues?state=open) o puedes proponer tus propias ideas. Antes de hacer tu pull request pasa tu codigo por JSLint.\r\n\r\nActualmente [estamos trabajando](https://github.com/hminaya/SDQ/contributors) en este proyecto:\r\n* [@hminaya](https://github.com/hminaya)\r\n* [@amhed](https://github.com/amhed)\r\n* [@lurraca](https://github.com/lurraca)\r\n* [@rmariuzzo](https://github.com/rmariuzzo)\r\n* [@jfsanchez2k](https://github.com/jfsanchez2k)\r\n* [@gpopoteur](https://github.com/gpopoteur)\r\n","google":"UA-39203259-1","note":"Don't delete this file! It's used internally to help with page regeneration."}